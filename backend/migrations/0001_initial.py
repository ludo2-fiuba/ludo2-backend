# Generated by Django 3.1.2 on 2020-10-25 01:58

import backend.models.user
import backend.validators
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('username', models.CharField(blank=True, default='', max_length=30)),
                ('dni', models.CharField(max_length=9, unique=True, validators=[backend.validators.validate_dni])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', backend.models.user.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Final',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True, editable=False)),
                ('subject', models.CharField(db_index=True, editable=False, max_length=100)),
                ('qrid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('siu_id', models.IntegerField(db_index=True, default=0, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='backend.user')),
                ('padron', models.CharField(blank=True, max_length=6, validators=[django.core.validators.MinLengthValidator(5)])),
                ('inscripto', models.BooleanField(default=False)),
                ('face_encodings', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, size=None)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='backend.user')),
                ('legajo', models.CharField(blank=True, max_length=8, validators=[django.core.validators.MinLengthValidator(5)])),
                ('face_encodings', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, size=None)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='FinalExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_exams', to='backend.final')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_exams', to='backend.student')),
            ],
        ),
        migrations.AddField(
            model_name='final',
            name='teacher',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='backend.teacher'),
        ),
        migrations.CreateModel(
            name='PreRegisteredStudent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('backend.student',),
        ),
        migrations.AddConstraint(
            model_name='finalexam',
            constraint=models.UniqueConstraint(fields=('final', 'student'), name='one_final_exam_per_student'),
        ),
    ]
